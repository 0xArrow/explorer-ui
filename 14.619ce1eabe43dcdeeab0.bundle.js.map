{"version":3,"file":"14.619ce1eabe43dcdeeab0.bundle.js","sources":["webpack:///./src/qrCode/QrCode.tsx"],"sourcesContent":["import * as React from \"react\";\nimport * as QRCode from \"qrcode\";\nimport { ILogger } from \"plugin-api/ILogger\";\n\nexport interface IQrCodeProps {\n    value: string;\n    logger: ILogger;\n}\n\nexport class QrCode extends React.PureComponent<IQrCodeProps> {\n    private canvasEl: HTMLCanvasElement;\n    private timeoutId: number | undefined;\n\n    componentDidMount() {\n        this.renderToCanvasDeferred();\n    }\n\n    componentDidUpdate(prevProps: IQrCodeProps) {\n        if (prevProps.value !== this.props.value) {\n            this.renderToCanvasDeferred();\n        }\n    }\n\n    componentWillUnmount() {\n        this.cancelDeferredRender();\n    }\n\n    private renderToCanvasDeferred() {\n        this.cancelDeferredRender();\n        this.timeoutId = setTimeout(() => {\n            QRCode.toCanvas(this.canvasEl, this.props.value).catch(e => {\n                this.props.logger.error(\"Couldn't render QRCode\", e, { value: this.props.value });\n            });\n        });\n    }\n\n    private cancelDeferredRender() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = void 0;\n        }\n    }\n\n    render() {\n        return (\n            <canvas ref={ref => this.canvasEl = ref!}>\n            </canvas>\n        );\n    }\n}\ntry {\n    // @ts-ignore\n    QrCode.displayName = \"QrCode\";\n    // @ts-ignore\n    QrCode.__docgenInfo = { \"description\": \"\", \"displayName\": \"QrCode\", \"props\": { \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"logger\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"logger\", \"required\": true, \"type\": { \"name\": \"ILogger\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/qrCode/QrCode.tsx#QrCode\"] = { docgenInfo: QrCode.__docgenInfo, name: \"QrCode\", path: \"src/qrCode/QrCode.tsx#QrCode\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"mappings":"AAAA","sourceRoot":""}